// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/analyzer/source_code_analyzer.proto

package analyzer // import "protobuf/analyzer"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SourceCodeAnalysisRequest struct {
	BeforeChange         *AnalysisTarget `protobuf:"bytes,1,opt,name=before_change,json=beforeChange,proto3" json:"before_change,omitempty"`
	AfterChange          *AnalysisTarget `protobuf:"bytes,2,opt,name=after_change,json=afterChange,proto3" json:"after_change,omitempty"`
	DiffsLogPath         string          `protobuf:"bytes,3,opt,name=diffs_log_path,json=diffsLogPath,proto3" json:"diffs_log_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SourceCodeAnalysisRequest) Reset()         { *m = SourceCodeAnalysisRequest{} }
func (m *SourceCodeAnalysisRequest) String() string { return proto.CompactTextString(m) }
func (*SourceCodeAnalysisRequest) ProtoMessage()    {}
func (*SourceCodeAnalysisRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_source_code_analyzer_69bdb90e8fb57d98, []int{0}
}
func (m *SourceCodeAnalysisRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceCodeAnalysisRequest.Unmarshal(m, b)
}
func (m *SourceCodeAnalysisRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceCodeAnalysisRequest.Marshal(b, m, deterministic)
}
func (dst *SourceCodeAnalysisRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceCodeAnalysisRequest.Merge(dst, src)
}
func (m *SourceCodeAnalysisRequest) XXX_Size() int {
	return xxx_messageInfo_SourceCodeAnalysisRequest.Size(m)
}
func (m *SourceCodeAnalysisRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceCodeAnalysisRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SourceCodeAnalysisRequest proto.InternalMessageInfo

func (m *SourceCodeAnalysisRequest) GetBeforeChange() *AnalysisTarget {
	if m != nil {
		return m.BeforeChange
	}
	return nil
}

func (m *SourceCodeAnalysisRequest) GetAfterChange() *AnalysisTarget {
	if m != nil {
		return m.AfterChange
	}
	return nil
}

func (m *SourceCodeAnalysisRequest) GetDiffsLogPath() string {
	if m != nil {
		return m.DiffsLogPath
	}
	return ""
}

type SourceCodeAnalysisResponse struct {
	Status                 int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message                string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	AstBeforePath          string   `protobuf:"bytes,3,opt,name=ast_before_path,json=astBeforePath,proto3" json:"ast_before_path,omitempty"`
	AstAfterPath           string   `protobuf:"bytes,4,opt,name=ast_after_path,json=astAfterPath,proto3" json:"ast_after_path,omitempty"`
	AstAbstractPath        string   `protobuf:"bytes,5,opt,name=ast_abstract_path,json=astAbstractPath,proto3" json:"ast_abstract_path,omitempty"`
	AstEdgeListsBeforePath string   `protobuf:"bytes,6,opt,name=ast_edge_lists_before_path,json=astEdgeListsBeforePath,proto3" json:"ast_edge_lists_before_path,omitempty"`
	AstEdgeListsAfterPath  string   `protobuf:"bytes,7,opt,name=ast_edge_lists_after_path,json=astEdgeListsAfterPath,proto3" json:"ast_edge_lists_after_path,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *SourceCodeAnalysisResponse) Reset()         { *m = SourceCodeAnalysisResponse{} }
func (m *SourceCodeAnalysisResponse) String() string { return proto.CompactTextString(m) }
func (*SourceCodeAnalysisResponse) ProtoMessage()    {}
func (*SourceCodeAnalysisResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_source_code_analyzer_69bdb90e8fb57d98, []int{1}
}
func (m *SourceCodeAnalysisResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceCodeAnalysisResponse.Unmarshal(m, b)
}
func (m *SourceCodeAnalysisResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceCodeAnalysisResponse.Marshal(b, m, deterministic)
}
func (dst *SourceCodeAnalysisResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceCodeAnalysisResponse.Merge(dst, src)
}
func (m *SourceCodeAnalysisResponse) XXX_Size() int {
	return xxx_messageInfo_SourceCodeAnalysisResponse.Size(m)
}
func (m *SourceCodeAnalysisResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceCodeAnalysisResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SourceCodeAnalysisResponse proto.InternalMessageInfo

func (m *SourceCodeAnalysisResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SourceCodeAnalysisResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *SourceCodeAnalysisResponse) GetAstBeforePath() string {
	if m != nil {
		return m.AstBeforePath
	}
	return ""
}

func (m *SourceCodeAnalysisResponse) GetAstAfterPath() string {
	if m != nil {
		return m.AstAfterPath
	}
	return ""
}

func (m *SourceCodeAnalysisResponse) GetAstAbstractPath() string {
	if m != nil {
		return m.AstAbstractPath
	}
	return ""
}

func (m *SourceCodeAnalysisResponse) GetAstEdgeListsBeforePath() string {
	if m != nil {
		return m.AstEdgeListsBeforePath
	}
	return ""
}

func (m *SourceCodeAnalysisResponse) GetAstEdgeListsAfterPath() string {
	if m != nil {
		return m.AstEdgeListsAfterPath
	}
	return ""
}

func init() {
	proto.RegisterType((*SourceCodeAnalysisRequest)(nil), "analyzer.SourceCodeAnalysisRequest")
	proto.RegisterType((*SourceCodeAnalysisResponse)(nil), "analyzer.SourceCodeAnalysisResponse")
}

func init() {
	proto.RegisterFile("protos/analyzer/source_code_analyzer.proto", fileDescriptor_source_code_analyzer_69bdb90e8fb57d98)
}

var fileDescriptor_source_code_analyzer_69bdb90e8fb57d98 = []byte{
	// 349 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0x86, 0x49, 0xbf, 0xaf, 0xad, 0xdd, 0xb6, 0x8a, 0x01, 0x4b, 0x1a, 0x44, 0x4a, 0x11, 0x29,
	0x3d, 0xb4, 0xa0, 0x17, 0xb1, 0x78, 0x68, 0x8b, 0xb7, 0x1e, 0x24, 0x7a, 0xf2, 0x12, 0x36, 0xc9,
	0x24, 0x2d, 0xd4, 0x6e, 0xdc, 0x99, 0x1c, 0xf4, 0xbf, 0xe9, 0x6f, 0x93, 0x9d, 0x24, 0x25, 0x16,
	0xc1, 0x5b, 0xe6, 0xdd, 0xe7, 0xcd, 0x3c, 0x0b, 0x2b, 0xc6, 0xa9, 0x56, 0xa4, 0x70, 0x2a, 0x77,
	0x72, 0xfb, 0xfe, 0x01, 0x7a, 0x8a, 0x2a, 0xd3, 0x21, 0xf8, 0xa1, 0x8a, 0xc0, 0x2f, 0xc3, 0x09,
	0x43, 0xf6, 0x51, 0x39, 0xbb, 0x17, 0x87, 0x2d, 0x0d, 0xa9, 0xd2, 0x54, 0x92, 0xc3, 0x4f, 0x4b,
	0xf4, 0x9f, 0xf8, 0x47, 0x4b, 0x15, 0xc1, 0xdc, 0x50, 0xb8, 0x41, 0x0f, 0xde, 0x32, 0x40, 0xb2,
	0xef, 0x45, 0x37, 0x80, 0x58, 0x69, 0xf0, 0xc3, 0xb5, 0xdc, 0x25, 0xe0, 0x58, 0x03, 0x6b, 0xd4,
	0xbe, 0x76, 0x26, 0xfb, 0x7d, 0x65, 0xe3, 0x59, 0xea, 0x04, 0xc8, 0xeb, 0xe4, 0xf8, 0x92, 0x69,
	0x7b, 0x26, 0x3a, 0x32, 0x26, 0xd0, 0x65, 0xbb, 0xf6, 0x47, 0xbb, 0xcd, 0x74, 0x51, 0xbe, 0x14,
	0xc7, 0xd1, 0x26, 0x8e, 0xd1, 0xdf, 0xaa, 0xc4, 0x4f, 0x25, 0xad, 0x9d, 0x7f, 0x03, 0x6b, 0xd4,
	0xf2, 0x3a, 0x9c, 0xae, 0x54, 0xf2, 0x28, 0x69, 0x3d, 0xfc, 0xaa, 0x09, 0xf7, 0x37, 0x7f, 0x4c,
	0xd5, 0x0e, 0xc1, 0xee, 0x89, 0x06, 0x92, 0xa4, 0x0c, 0xd9, 0xbc, 0xee, 0x15, 0x93, 0xed, 0x88,
	0xe6, 0x2b, 0x20, 0xca, 0x42, 0xaa, 0xe5, 0x95, 0xa3, 0x7d, 0x25, 0x4e, 0x24, 0x92, 0x5f, 0x5c,
	0xbb, 0xb2, 0xb7, 0x2b, 0x91, 0x16, 0x9c, 0x9a, 0xc5, 0x46, 0xcf, 0x70, 0xf9, 0xfd, 0x18, 0xfb,
	0x9f, 0xeb, 0x49, 0xa4, 0xb9, 0x09, 0x99, 0x1a, 0x8b, 0x53, 0xa6, 0x02, 0x24, 0x2d, 0x43, 0xca,
	0xc1, 0x3a, 0x83, 0x66, 0xcd, 0xbc, 0xc8, 0x99, 0xbd, 0x13, 0xae, 0x61, 0x21, 0x4a, 0xc0, 0xdf,
	0x6e, 0x90, 0xf0, 0x87, 0x44, 0x83, 0x4b, 0x3d, 0x89, 0xf4, 0x10, 0x25, 0xb0, 0x32, 0xe7, 0x15,
	0x9b, 0x5b, 0xd1, 0x3f, 0xe8, 0x56, 0xc4, 0x9a, 0x5c, 0x3d, 0xab, 0x56, 0xf7, 0x86, 0x8b, 0xf3,
	0x17, 0x97, 0x5f, 0x42, 0x90, 0xc5, 0xfb, 0x47, 0x32, 0x2b, 0x3f, 0x82, 0x06, 0x9f, 0xdd, 0x7c,
	0x07, 0x00, 0x00, 0xff, 0xff, 0x51, 0x80, 0x9e, 0xe4, 0x7d, 0x02, 0x00, 0x00,
}
