{
 "vulnerabilities": {
  "reentrancy": [
   "../../dataset/107-reentrancy/test01.sol:54:20: Warning: Re-Entrancy Vulnerability.\n        uint bal = ERC20(token).balanceOf(address(this))", 
   "../../dataset/107-reentrancy/test01.sol:56:13: Warning: Re-Entrancy Vulnerability.\n            ERC20(token).transfer(msg.sender, amount)"
  ], 
  "prng_bug": [], 
  "tod_bug": [], 
  "dos_bug": [], 
  "integer_overflow": [], 
  "integer_underflow": [], 
  "tod": [
   "../../dataset/107-reentrancy/test01.sol:62:88: Warning: Transaction-Ordering Dependency.\n    function WithdrawalEnabled() constant internal returns (bool) { return Date > 0 && Date <= now", 
   "../../dataset/107-reentrancy/test01.sol:62:76: Warning: Transaction-Ordering Dependency.\n    function WithdrawalEnabled() constant internal returns (bool) { return Date > 0", 
   "../../dataset/107-reentrancy/test01.sol:23:9: Warning: Transaction-Ordering Dependency.\n        Owner = msg.sender", 
   "../../dataset/107-reentrancy/test01.sol:29:9: Warning: Transaction-Ordering Dependency.\n        Date = NewDate", 
   "../../dataset/107-reentrancy/test01.sol:15:86: Warning: Transaction-Ordering Dependency.\n    function transferOwnership(address to) onlyOwner { TransferOwnership(Owner, to); Owner = to", 
   "../../dataset/107-reentrancy/test01.sol:64:44: Warning: Transaction-Ordering Dependency.\n    modifier onlyOwner { if (msg.sender == Owner"
  ]
 }, 
 "run_time": "5.87s", 
 "evm_code_coverage": "98.6"
}