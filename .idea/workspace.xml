<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="5000b02a-95c2-4686-a070-70f4f7308ec4" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/checker/algorithm.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/checker/overflow.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/checker/reentrancy.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/checker/test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/checker/tod.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/file.dot" beforeDir="false" afterPath="$PROJECT_DIR$/file.dot" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/graphBuilder/XGraph.py" beforeDir="false" afterPath="$PROJECT_DIR$/graphBuilder/XGraph.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/graphBuilder/evmGraph.py" beforeDir="false" afterPath="$PROJECT_DIR$/graphBuilder/evmGraph.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/interpreter/evmInterpreter.py" beforeDir="false" afterPath="$PROJECT_DIR$/interpreter/evmInterpreter.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/seraph.py" beforeDir="false" afterPath="$PROJECT_DIR$/seraph.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test_contracts/ree" beforeDir="false" afterPath="$PROJECT_DIR$/test_contracts/ree" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test_contracts/ree:Ownable.evm" beforeDir="false" afterPath="$PROJECT_DIR$/test_contracts/ree:Ownable.evm" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test_contracts/ree:Ownable.evm.disasm" beforeDir="false" afterPath="$PROJECT_DIR$/test_contracts/ree:Ownable.evm.disasm" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DatabaseView">
    <option name="SHOW_INTERMEDIATE" value="true" />
    <option name="GROUP_DATA_SOURCES" value="true" />
    <option name="GROUP_SCHEMA" value="true" />
    <option name="GROUP_CONTENTS" value="false" />
    <option name="SORT_POSITIONED" value="false" />
    <option name="SHOW_EMPTY_GROUPS" value="false" />
    <option name="AUTO_SCROLL_FROM_SOURCE" value="false" />
    <option name="HIDDEN_KINDS">
      <set />
    </option>
    <expand />
    <select />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1QzQAJ1INiqC4PP5qOiyq8gElgU" />
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
  </component>
  <component name="PyConsoleOptionsProvider">
    <option name="myPythonConsoleState">
      <console-settings module-name="seraph-V1.0" is-module-sdk="true">
        <option name="useSoftWraps" value="true" />
        <option name="myUseModuleSdk" value="true" />
        <option name="myModuleName" value="seraph-V1.0" />
      </console-settings>
    </option>
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/disassembler" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Python.seraph">
    <configuration name="networktest" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="seraph-V1.0" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/../../network" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/../../network/networktest.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="seraph" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="seraph-V1.0" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/seraph.py" />
      <option name="PARAMETERS" value="-s $PROJECT_DIR$/test_contracts/ree -sol -p ethereum -vb" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="test" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="seraph-V1.0" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/checker" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/checker/test.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Python.networktest" />
      <item itemvalue="Python.seraph" />
      <item itemvalue="Python.test" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python.seraph" />
        <item itemvalue="Python.networktest" />
        <item itemvalue="Python.test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="5000b02a-95c2-4686-a070-70f4f7308ec4" name="Default Changelist" comment="" />
      <created>1568770799299</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1568770799299</updated>
      <workItem from="1568770819364" duration="26313000" />
      <workItem from="1569568282040" duration="2774000" />
      <workItem from="1570504894773" duration="6918000" />
      <workItem from="1570585838114" duration="27380000" />
      <workItem from="1571060809982" duration="27944000" />
      <workItem from="1571112833748" duration="6786000" />
      <workItem from="1573783697777" duration="6615000" />
      <workItem from="1573816625544" duration="19941000" />
      <workItem from="1575007652430" duration="61905000" />
      <workItem from="1578896751171" duration="109976000" />
      <workItem from="1581431526461" duration="6068000" />
      <workItem from="1581478620995" duration="13564000" />
      <workItem from="1581596008889" duration="16238000" />
      <workItem from="1581817602258" duration="23995000" />
      <workItem from="1582209839439" duration="40751000" />
      <workItem from="1583130305476" duration="7023000" />
      <workItem from="1583150572818" duration="58771000" />
      <workItem from="1583467341574" duration="2846000" />
    </task>
    <task id="LOCAL-00001" summary="delete unnecessary files">
      <created>1573785113280</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1573785113280</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="delete unnecessary files" />
    <option name="LAST_COMMIT_MESSAGE" value="delete unnecessary files" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/interpreter/wasmInterpreter.py</url>
          <line>5</line>
          <option name="timeStamp" value="10" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/interpreter/wasmInterpreter.py</url>
          <line>286</line>
          <option name="timeStamp" value="89" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file:///usr/local/lib/python3.7/site-packages/networkx/classes/graph.py</url>
          <line>566</line>
          <option name="timeStamp" value="96" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/interpreter/evmInterpreter.py</url>
          <line>198</line>
          <option name="timeStamp" value="130" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/checker/test.py</url>
          <line>15</line>
          <option name="timeStamp" value="162" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/checker/test.py</url>
          <line>8</line>
          <option name="timeStamp" value="163" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/checker/test.py</url>
          <line>14</line>
          <option name="timeStamp" value="164" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/../../network/networktest.py</url>
          <line>14</line>
          <option name="timeStamp" value="165" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/checker/reentrancy.py</url>
          <line>26</line>
          <option name="timeStamp" value="192" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/checker/reentrancy.py</url>
          <line>27</line>
          <option name="timeStamp" value="193" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/checker/reentrancy.py</url>
          <line>34</line>
          <option name="timeStamp" value="194" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/checker/reentrancy.py</url>
          <line>11</line>
          <option name="timeStamp" value="202" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/checker/algorithm.py</url>
          <line>168</line>
          <option name="timeStamp" value="204" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/checker/tod.py</url>
          <line>21</line>
          <option name="timeStamp" value="207" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint type="python-exception">
          <properties notifyOnTerminate="true" exception="BaseException">
            <option name="notifyOnTerminate" value="true" />
          </properties>
        </breakpoint>
      </default-breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="PythonConfigurationType">
        <watch expression="check_reachable_to_list(self.XGraph.graph, arith_node, state_related_node)" language="Python" />
        <watch expression="arith_node" language="Python" />
        <watch expression="path_list = get_labeled_paths_between_nodes(graph, &quot;controlEdge&quot;, from_node, to_node_list)" language="Python" />
        <watch expression="len(path)" language="Python" />
        <watch expression="graph[path[index]][path[index + 1]]['label']" language="Python" />
        <watch expression="graph[path[index]][path[index + 1]]['label']" language="Python" />
        <watch expression="path[8]" language="Python" />
        <watch expression="check_reachable_to_list(self.XGraph.graph, arith_node, state_related_node)" language="Python" />
        <watch expression="arith_nodes" language="Python" />
        <watch expression="self.XGraph.arith_nodes" language="Python" />
        <watch expression="taint_node_list" language="Python" />
        <watch expression="check_reachable_from_list(self.XGraph.graph, taint_node_list, self.XGraph.arith_nodes[4])" language="Python" />
        <watch expression="check_reachable(self.XGraph.graph,taint_node_list[2], self.XGraph.arith_nodes[4] )" language="Python" />
        <watch expression="check_reachable_to_list(self.XGraph.graph, arith_node, state_related_node)" language="Python" />
        <watch expression="get_argument_or_flow_node(self.XGraph.graph, call_node)" language="Python" />
        <watch expression="self.XGraph.graph[call_param[0]][call_node]['branchList']" language="Python" />
        <watch expression="check_state_change(self.XGraph.graph, branch_id, call_node)" language="Python" />
        <watch expression="check_state_change(self.XGraph.graph, branch_id, call_node)" language="Python" />
        <watch expression="get_nodes_in_same_branch(graph, branch_id)" language="Python" />
        <watch expression="check_state_change(self.XGraph.graph, branch_id, call_node)" language="Python" />
        <watch expression="get_nodes_in_same_branch(graph, branch_id)" language="Python" />
        <watch expression="get_edges_in_same_branch(graph, branch_id)" language="Python" />
        <watch expression="check_state_change(self.XGraph.graph, branch_id, call_node)" language="Python" />
        <watch expression="get_nodes_in_same_branch(graph, branch_id)" language="Python" />
        <watch expression="edge" language="Python" />
        <watch expression="graph[edge[0]][edge[1]]" language="Python" />
        <watch expression="node_list" language="Python" />
        <watch expression="recipient_node" language="Python" />
        <watch expression="check_reachable_from_list(self.XGraph.graph, taint_node_list, recipient_node)" language="Python" />
        <watch expression="from_taint_list" language="Python" />
        <watch expression="check_reachable(self.XGraph.graph, from_taint_list[1], recipient_node)" language="Python" />
        <watch expression="path_list" language="Python" />
        <watch expression="path_list" language="Python" />
        <watch expression="path" language="Python" />
        <watch expression="graph[path[4]][path[5]]['label'] == &quot;controlEdge&quot;" language="Python" />
        <watch expression="get_reachable_list(graph, from_node_list, to_node)" language="Python" />
        <watch expression="get_labeled_paths_between_nodes(graph, &quot;controlEdge&quot;, from_node, to_node)" language="Python" />
        <watch expression="check_path_label(graph, path_list[0], label)" language="Python" />
        <watch expression="path_list" language="Python" />
        <watch expression="check_path_label(graph, path, label)" language="Python" />
        <watch expression="check_storage_taintable(self.XGraph.graph, storage_node, taint_node_list, self.XGraph.msg_sender_nodes)" language="Python" />
        <watch expression="check_storage_taintable(self.XGraph.graph, storage_node, taint_node_list, self.XGraph.msg_sender_nodes)" language="Python" />
        <watch expression="check_reachable_from_list(graph, taint_node_list, state_node)" language="Python" />
        <watch expression="check_reachable(graph, from_node, to_node)" language="Python" />
        <watch expression="check_reachable_from_list(graph, taint_node_list, state_node)" language="Python" />
        <watch expression="sstore_nodes = graph.predecessors(state_node)" language="Python" />
        <watch expression="list(graph.predecessors(state_node))" language="Python" />
        <watch expression="get_labeled_paths_between_nodes(graph, &quot;controlEdge&quot;, from_node, to_node)" language="Python" />
        <watch expression="path_list" language="Python" />
        <watch expression="list(nx.all_simple_paths(graph, source=from_node, target=to_node))" language="Python" />
        <watch expression="global_state" language="Python" />
        <watch expression="global_state" language="Python" />
        <watch expression="check_storage_taintable(self.XGraph.graph, storage_node, taint_node_list, self.XGraph.msg_sender_nodes)" language="Python" />
        <watch expression="from_taint_list" language="Python" />
        <watch expression="check_storage_taintable(self.XGraph.graph, storage_node, taint_node_list, self.XGraph.msg_sender_nodes)" language="Python" />
        <watch expression="check_reachable_from_list(graph, taint_node_list, state_node)" language="Python" />
        <watch expression="state_node" />
        <watch expression="check_reachable_from_list(graph, taint_node_list, sstore_node)" language="Python" />
        <watch expression="get_control_node(graph, sstore_nodes)" language="Python" />
        <watch expression="check_storage_taintable(self.XGraph.graph, storage_node, taint_node_list, self.XGraph.msg_sender_nodes)" language="Python" />
        <watch expression="check_storage_taintable(self.XGraph.graph, storage_node, taint_node_list, self.XGraph.msg_sender_nodes)" language="Python" />
        <watch expression="get_taint_sstore_list(self.XGraph.graph, state_node, taint_node_list, msg_sender_nodes)" language="Python" />
        <watch expression="self.XGraph" language="Python" />
      </configuration>
    </watches-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/seraphV1_0$seraph.coverage" NAME="seraph Coverage Results" MODIFIED="1575943227278" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/Seraph$test.coverage" NAME="test Coverage Results" MODIFIED="1583153565623" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/checker" />
    <SUITE FILE_PATH="coverage/Seraph$seraph.coverage" NAME="seraph Coverage Results" MODIFIED="1583505955091" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/seraph_V1_0$seraph.coverage" NAME="seraph Coverage Results" MODIFIED="1571114738343" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/Seraph$networktest.coverage" NAME="networktest Coverage Results" MODIFIED="1583153790566" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/../../network" />
  </component>
</project>